#! C:/Program Files/Nuke11.1v2/nuke-11.1.2.dll -nx
version 11.1 v2
Gizmo {
 addUserKnob {20 User}
 addUserKnob {41 BackdropColour l "Backdrop Colour" T ColourCodes.BackdropColour}
 addUserKnob {41 SpecificBackdrop l "Specific Backdrop?" T ColourCodes.SpecificBackdrop}
 addUserKnob {41 BackdropColourButton l "Change BackdropNode Tile Color" T ColourCodes.BackdropColourButton}
 addUserKnob {41 PythonTest T ColourCodes.PythonTest}
}
 Input {
  inputs 0
  name Input1
  xpos 444
  ypos -94
 }
 NoOp {
  name ColourCodes
  tile_color 0x19689e00
  xpos 444
  ypos -54
  addUserKnob {20 User}
  addUserKnob {18 BackdropColour l "Backdrop Colour"}
  BackdropColour {0.6 0.095 0.135}
  addUserKnob {6 BackdropColour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  BackdropColour_panelDropped true
  addUserKnob {6 BackdropColour_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 BackdropColour_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 BackdropColour_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {1 SpecificBackdrop l "Specific Backdrop?" t "Adding a value to this input will change only backdrop nodes with the same label\n\nTo change all backdrops, name this input 'ALL'"}
  SpecificBackdrop ALL
  addUserKnob {22 BackdropColourButton l "Change BackdropNode Tile Color" -STARTLINE T "colour = nuke.thisNode().knob('BackdropColour').value()\n\nr = 255 * colour\[0]\ng = 255 * colour\[1]\nb = 255 * colour\[2]\n\ntile_color = int('%02x%02x%02x%02x' % (r,g,b,0),16)\n\n\nallBackdropNodes = \[n for n in nuke.allNodes() if n.Class() in ('BackdropNode')]\n\nfor BackdropNode in allBackdropNodes:\n\n    BackdropNodeLabel = nuke.toNode(BackdropNode.name()).knob('label').getValue()\n    SpecificBackdrop = nuke.thisNode().knob('SpecificBackdrop').getValue()\n\n    if BackdropNodeLabel == SpecificBackdrop: \n        nuke.toNode(BackdropNode.name()).knob('tile_color').setExpression(str(tile_color))\n        nuke.thisNode().knob('tile_color').setExpression(str(tile_color))\n    elif SpecificBackdrop == 'ALL':\n        nuke.toNode(BackdropNode.name()).knob('tile_color').setExpression(str(tile_color))\n        nuke.thisNode().knob('tile_color').setExpression(str(tile_color))\n"}
  addUserKnob {52 PythonTest T "def backdropColorChanged():\n    colour = nuke.thisNode().knob('BackdropColour').value()\n\n    r = 255 * colour\[0]\n    g = 255 * colour\[1]\n    b = 255 * colour\[2]\n\n    tile_color = int('%02x%02x%02x%02x' % (r,g,b,0),16)\n\n\n    allBackdropNodes = \[n for n in nuke.allNodes() if n.Class() in ('BackdropNode')]\n\n    for BackdropNode in allBackdropNodes:\n\n        BackdropNodeLabel = nuke.toNode(BackdropNode.name()).knob('label').getValue()\n        SpecificBackdrop = nuke.thisNode().knob('SpecificBackdrop').getValue()\n\n        if BackdropNodeLabel == SpecificBackdrop:\n            nuke.toNode(BackdropNode.name()).knob('tile_color').setExpression(str(tile_color))\n            nuke.thisNode().knob('tile_color').setExpression(str(tile_color))\n        elif SpecificBackdrop == 'ALL':\n            nuke.toNode(BackdropNode.name()).knob('tile_color').setExpression(str(tile_color))\n            nuke.thisNode().knob('tile_color').setExpression(str(tile_color))\n\n\nnuke.addKnobChanged(backdropColorChanged, nodeClass=\"ColourGrades\")" +STARTLINE}
 }
 Output {
  name Output1
  xpos 444
  ypos 46
 }
end_group
