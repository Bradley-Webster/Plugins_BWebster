#Mammal Backdrop v008
#Copyright: Mammal Studios 2018
#Created by EToth <etoth@mammalstudios.com> / modified ***DRASTICALLY*** from
#Timur Khodzhaev / Website: www.chimuru.com
#http://www.nukepedia.com/python/nodegraph/autobackdrop-replacement

import nuke
import random
import colorsys



def main():
    '''
    Creates a backdrop node encompassing the selected nodes.
    Preset labels/icons are included for quick use.
    '''

    # Are there selected nodes? Where are they?
    selNodes = nuke.selectedNodes()

    if not selNodes:
        nuke.message("Please select some nodes before\ncreating a backdrop.")
        return

    # Calculate the bounds for the backdrop node
    bdX = min([node.xpos() for node in selNodes])
    bdY = min([node.ypos() for node in selNodes])
    bdW = max([node.xpos() + node.screenWidth() for node in selNodes]) - bdX
    bdH = max([node.ypos() + node.screenHeight() for node in selNodes]) - bdY

    fntSize=42

    # Expand the bounds for padding. Elements are offsets for left, top, right and bottom edges respectively
    bdPad = 30
    left, top, right, bottom = (-bdPad, (-fntSize-72), bdPad, bdPad)
    bdX += left
    bdY += top
    bdW += (right - left)
    bdH += (bottom - top)

    #Ensure the width is a minimum width
    if bdW<=349:
        bdW=350

    R,G,B = colorsys.hsv_to_rgb(0.800, 0.000, 0.125)

    n = nuke.nodes.BackdropNode(xpos = bdX,
      bdwidth = bdW,
      ypos = bdY,
      bdheight = bdH,
      tile_color = int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ),
      note_font_size = fntSize)

    #Are there existing backdrops? What's the minimum zOrder value?
    #Set our new backdrop to be behind the lowest existing backdrop
    try:
        zOrder = min([tempNode.knob('z_order').getValue() for tempNode in nuke.selectedNodes(filter="BackdropNode")], key=float) - 1
        n.knob('z_order').setValue(zOrder)
        #print "There are existing backdrops. zOrder is now {0}".format(zOrder)

    except:
        #print "No other backdrops found. zOrder is default!"
        pass

    #print "I am beginning to CREATE knobs for {0}.".format(n.name())
    #Creating knobs/tabs
    bdUserSettings = nuke.Tab_Knob('bdUserSettings', 'Backdrop Settings')
    bdSettingsBegin = nuke.Tab_Knob('begin', 'Presets:', nuke.TABBEGINGROUP)
    bdSettingsEnd = nuke.Tab_Knob('', None, nuke.TABENDGROUP)
    bdLabel = nuke.Link_Knob( 'label_1','Label' )
    bdLabel.makeLink(n.name(), 'label')
    bdFontSize = nuke.Link_Knob( 'note_font_size1','Font Size' )
    bdFontSize.makeLink(n.name(), 'note_font_size')
    bdWidget = nuke.PyCustom_Knob("mammalBackdrop", "","mammalBackdrop(nuke.thisNode())")
    bdDiv1 = nuke.Text_Knob("bdDiv1","")
    bdExecute = nuke.PyCustom_Knob("mammalBackdropExecute", "","nuke.thisNode().knob('runMe').execute()")

    ###--- Bradley.W Foundry Edit - added PySide2 imports to use within Nuke11+ -----------------------------###
    ###--- For more information, please review our knowledge base article via the URL below:
    ###--- https://support.foundry.com/hc/en-us/articles/360000218324
    bdUI = nuke.PyScript_Knob("runMe", "runMe", "#=====The Python UI / Pyside Widget / Special Sauce =====\ntry:\n    from PySide import QtGui, QtCore\nexcept ImportError:\n    from PySide2 import QtWidgets as QtGui\n    from PySide2 import QtCore\nimport nuke\nimport random\n\nbdLabelList=['CG / FX', '3D', 'Key / Roto', 'Color', 'Transform', 'Time', 'Paint', 'Note', 'Read', 'Write', 'Important', 'Random']\n\n\ntry:\n    if mmlBdDeclared:\n        print \"mammalBackdrop() is already declared!\"\n        pass\nexcept:        \n    class mammalBackdrop(QtGui.QWidget):\n        def __init__(self, node):\n            super(self.__class__, self).__init__()\n\n            self.node = node\n            \n            bdMainLayout = QtGui.QVBoxLayout()\n            bdPaletteLayout = QtGui.QHBoxLayout()\n            bdPaletteLayout.setContentsMargins(0,0,0,0)\n            bdPaletteLayout.setSpacing(0)\n            bdPresetLayout = QtGui.QGridLayout()\n            bdCustomLayout = QtGui.QHBoxLayout()\n            bdMainLayout.addLayout(bdPaletteLayout)\n            bdMainLayout.addLayout(bdPresetLayout)\n            bdMainLayout.addLayout(bdCustomLayout)\n            #bdPresetLayout.QToolTip.hideText()\n            self.setLayout(bdMainLayout)\n\n            bdButtonPalette0 = QtGui.QPushButton()\n            bdButtonPalette0.clicked.connect(self.bdButtonPalette0Clicked)\n            bdButtonPalette0.setStyleSheet(\"background-color: rgb(0,0,0);\")\n\n\n            bdButtonPalette1 = QtGui.QPushButton()\n            bdButtonPalette1.clicked.connect(self.bdButtonPalette1Clicked)\n            bdButtonPalette1.setStyleSheet(\"background-color: rgb(29,29,29);\")\n\n            bdButtonPalette2 = QtGui.QPushButton()\n            bdButtonPalette2.clicked.connect(self.bdButtonPalette2Clicked)\n            bdButtonPalette2.setStyleSheet(\"background-color: rgb(82,82,82);\")\n\n            bdButtonPalette3 = QtGui.QPushButton()\n            bdButtonPalette3.clicked.connect(self.bdButtonPalette3Clicked)\n            bdButtonPalette3.setStyleSheet(\"background-color: rgb(151,151,151);\")\n\n            bdButtonPalette4 = QtGui.QPushButton()\n            bdButtonPalette4.clicked.connect(self.bdButtonPalette4Clicked)\n            bdButtonPalette4.setStyleSheet(\"background-color: rgb(232,232,232);\")\n\n            bdButtonPalette5 = QtGui.QPushButton()\n            bdButtonPalette5.clicked.connect(self.bdButtonPalette5Clicked)\n            bdButtonPalette5.setStyleSheet(\"background-color: rgb(255,0,0);\")\n\n            bdButtonPalette6 = QtGui.QPushButton()\n            bdButtonPalette6.clicked.connect(self.bdButtonPalette6Clicked)\n            bdButtonPalette6.setStyleSheet(\"background-color: rgb(255,95,0);\")\n\n            bdButtonPalette7 = QtGui.QPushButton()\n            bdButtonPalette7.clicked.connect(self.bdButtonPalette7Clicked)\n            bdButtonPalette7.setStyleSheet(\"background-color: rgb(255,191,0);\")\n\n            bdButtonPalette8 = QtGui.QPushButton()\n            bdButtonPalette8.clicked.connect(self.bdButtonPalette8Clicked)\n            bdButtonPalette8.setStyleSheet(\"background-color: rgb(223,255,0);\")\n\n            bdButtonPalette9 = QtGui.QPushButton()\n            bdButtonPalette9.clicked.connect(self.bdButtonPalette9Clicked)\n            bdButtonPalette9.setStyleSheet(\"background-color: rgb(127,255,0);\")\n\n            bdButtonPalette10 = QtGui.QPushButton()\n            bdButtonPalette10.clicked.connect(self.bdButtonPalette10Clicked)\n            bdButtonPalette10.setStyleSheet(\"background-color: rgb(31,255,0);\")\n\n            bdButtonPalette11 = QtGui.QPushButton()\n            bdButtonPalette11.clicked.connect(self.bdButtonPalette11Clicked)\n            bdButtonPalette11.setStyleSheet(\"background-color: rgb(0,255,63);\")\n\n            bdButtonPalette12 = QtGui.QPushButton()\n            bdButtonPalette12.clicked.connect(self.bdButtonPalette12Clicked)\n            bdButtonPalette12.setStyleSheet(\"background-color: rgb(0,255,159);\")\n\n            bdButtonPalette13 = QtGui.QPushButton()\n            bdButtonPalette13.clicked.connect(self.bdButtonPalette13Clicked)\n            bdButtonPalette13.setStyleSheet(\"background-color: rgb(0,255,255);\")\n\n            bdButtonPalette14 = QtGui.QPushButton()\n            bdButtonPalette14.clicked.connect(self.bdButtonPalette14Clicked)\n            bdButtonPalette14.setStyleSheet(\"background-color: rgb(0,159,255);\")\n\n            bdButtonPalette15 = QtGui.QPushButton()\n            bdButtonPalette15.clicked.connect(self.bdButtonPalette15Clicked)\n            bdButtonPalette15.setStyleSheet(\"background-color: rgb(0,63,255);\")\n\n            bdButtonPalette16 = QtGui.QPushButton()\n            bdButtonPalette16.clicked.connect(self.bdButtonPalette16Clicked)\n            bdButtonPalette16.setStyleSheet(\"background-color: rgb(31,0,255);\")\n\n            bdButtonPalette17 = QtGui.QPushButton()\n            bdButtonPalette17.clicked.connect(self.bdButtonPalette17Clicked)\n            bdButtonPalette17.setStyleSheet(\"background-color: rgb(127,0,255);\")\n\n            bdButtonPalette18 = QtGui.QPushButton()\n            bdButtonPalette18.clicked.connect(self.bdButtonPalette18Clicked)\n            bdButtonPalette18.setStyleSheet(\"background-color: rgb(223,0,255);\")\n\n            bdButtonPalette19 = QtGui.QPushButton()\n            bdButtonPalette19.clicked.connect(self.bdButtonPalette19Clicked)\n            bdButtonPalette19.setStyleSheet(\"background-color: rgb(255,0,191);\")\n\n            bdButton0 = QtGui.QPushButton('CG / FX')\n            bdButton0.clicked.connect(self.bdButton0Clicked)\n            bdButton0.setStyleSheet(\"background-color: rgb(31,0,0);\")\n            bdButton0.setMinimumHeight(35) \n\n            bdButton1 = QtGui.QPushButton('3D')\n            bdButton1.clicked.connect(self.bdButton1Clicked)\n            bdButton1.setStyleSheet(\"background-color: rgb(63,9,9);\")\n            bdButton1.setMinimumHeight(35) \n\n            bdButton2 = QtGui.QPushButton('Key / Roto')\n            bdButton2.clicked.connect(self.bdButton2Clicked)\n            bdButton2.setStyleSheet(\"background-color: rgb(8,44,6);\")\n            bdButton2.setMinimumHeight(35) \n\n            bdButton3 = QtGui.QPushButton('Color')\n            bdButton3.clicked.connect(self.bdButton3Clicked)\n            bdButton3.setStyleSheet(\"background-color: rgb(28,42,63);\")\n            bdButton3.setMinimumHeight(35) \n\n            bdButton4 = QtGui.QPushButton('Transform')\n            bdButton4.clicked.connect(self.bdButton4Clicked)\n            bdButton4.setStyleSheet(\"background-color: rgb(57,31,63);\")\n            bdButton4.setMinimumHeight(35) \n\n            bdButton5 = QtGui.QPushButton('Time')\n            bdButton5.clicked.connect(self.bdButton5Clicked)\n            bdButton5.setStyleSheet(\"background-color: rgb(45,40,22);\")\n            bdButton5.setMinimumHeight(35) \n\n            bdButton6 = QtGui.QPushButton('Paint')\n            bdButton6.clicked.connect(self.bdButton6Clicked)\n            bdButton6.setStyleSheet(\"background-color: rgb(0,44,44);\")\n            bdButton6.setMinimumHeight(35) \n\n            bdButton7 = QtGui.QPushButton('Note')\n            bdButton7.clicked.connect(self.bdButton7Clicked)\n            bdButton7.setStyleSheet(\"background-color: rgb(31,31,31);\")\n            bdButton7.setMinimumHeight(35) \n\n            bdButton8 = QtGui.QPushButton('Read')\n            bdButton8.clicked.connect(self.bdButton8Clicked)\n            bdButton8.setStyleSheet(\"background-color: rgb(76,0,29);\")\n            bdButton8.setMinimumHeight(35) \n\n            bdButton9 = QtGui.QPushButton('Write')\n            bdButton9.clicked.connect(self.bdButton9Clicked)\n            bdButton9.setStyleSheet(\"background-color: rgb(38,25,5);\")\n            bdButton9.setMinimumHeight(35) \n\n            bdButton10 = QtGui.QPushButton('Important')\n            bdButton10.clicked.connect(self.bdButton10Clicked)\n            bdButton10.setStyleSheet(\"background-color: rgb(216,64,37);\")\n            bdButton10.setMinimumHeight(35) \n\n            bdButton11 = QtGui.QPushButton('Random')\n            bdButton11.clicked.connect(self.bdButton11Clicked)\n            bdButton11.setStyleSheet(\"background-color: rgb(128,128,128);\")\n            bdButton11.setMinimumHeight(35)\n            \n            bdButtonCustom1 = QtGui.QPushButton('Z+')\n            bdButtonCustom1.clicked.connect(self.bdButtonCustom1Clicked)\n            #bdButtonCustom1.setStyleSheet(\"background-color: rgb(89,89,89);\")\n            bdButtonCustom1.setMinimumHeight(35)\n            \n            bdButtonCustom2 = QtGui.QPushButton('Z-')\n            bdButtonCustom2.clicked.connect(self.bdButtonCustom2Clicked)\n            #bdButtonCustom2.setStyleSheet(\"background-color: rgb(89,89,89);\")\n            bdButtonCustom2.setMinimumHeight(35)\n            \n            bdButtonCustom3 = QtGui.QPushButton('Font+')\n            bdButtonCustom3.clicked.connect(self.bdButtonCustom3Clicked)\n            #bdButtonCustom3.setStyleSheet(\"background-color: rgb(89,89,89);\")\n            bdButtonCustom3.setMinimumHeight(35)\n            \n            bdButtonCustom4 = QtGui.QPushButton('Font-')\n            bdButtonCustom4.clicked.connect(self.bdButtonCustom4Clicked)\n            #bdButtonCustom4.setStyleSheet(\"background-color: rgb(89,89,89);\")\n            bdButtonCustom4.setMinimumHeight(35)\n                    \n            bdButtonCustom5 = QtGui.QPushButton('Help')\n            bdButtonCustom5.clicked.connect(self.bdButtonCustom5Clicked)\n            #bdButtonCustom5.setStyleSheet(\"background-color: rgb(89,89,89);\")\n            bdButtonCustom5.setMinimumHeight(35)\n\n\n            bdPaletteLayout.addWidget(bdButtonPalette0)\n            bdPaletteLayout.addWidget(bdButtonPalette1)\n            bdPaletteLayout.addWidget(bdButtonPalette2)\n            bdPaletteLayout.addWidget(bdButtonPalette3)\n            bdPaletteLayout.addWidget(bdButtonPalette4)\n            bdPaletteLayout.addWidget(bdButtonPalette5)\n            bdPaletteLayout.addWidget(bdButtonPalette6)\n            bdPaletteLayout.addWidget(bdButtonPalette7)\n            bdPaletteLayout.addWidget(bdButtonPalette8)\n            bdPaletteLayout.addWidget(bdButtonPalette9)\n            bdPaletteLayout.addWidget(bdButtonPalette10)\n            bdPaletteLayout.addWidget(bdButtonPalette11)\n            bdPaletteLayout.addWidget(bdButtonPalette12)\n            bdPaletteLayout.addWidget(bdButtonPalette13)\n            bdPaletteLayout.addWidget(bdButtonPalette14)\n            bdPaletteLayout.addWidget(bdButtonPalette15)\n            bdPaletteLayout.addWidget(bdButtonPalette16)\n            bdPaletteLayout.addWidget(bdButtonPalette17)\n            bdPaletteLayout.addWidget(bdButtonPalette18)\n            bdPaletteLayout.addWidget(bdButtonPalette19)\n\n            bdPresetLayout.addWidget(bdButton0,0,0)\n            bdPresetLayout.addWidget(bdButton1,0,1)\n            bdPresetLayout.addWidget(bdButton2,0,2)\n            bdPresetLayout.addWidget(bdButton3,0,3)\n            bdPresetLayout.addWidget(bdButton4,1,0)\n            bdPresetLayout.addWidget(bdButton5,1,1)\n            bdPresetLayout.addWidget(bdButton6,1,2)\n            bdPresetLayout.addWidget(bdButton7,1,3)\n            bdPresetLayout.addWidget(bdButton8,2,0)\n            bdPresetLayout.addWidget(bdButton9,2,1)\n            bdPresetLayout.addWidget(bdButton10,2,2)\n            bdPresetLayout.addWidget(bdButton11,2,3)\n            \n            bdCustomLayout.addWidget(bdButtonCustom1)\n            bdCustomLayout.addWidget(bdButtonCustom2)\n            bdCustomLayout.addWidget(bdButtonCustom3)\n            bdCustomLayout.addWidget(bdButtonCustom4)\n            bdCustomLayout.addWidget(bdButtonCustom5)\n\n        def bdButtonPalette0Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,0.0,0.0,255), 16)) \n\n        def bdButtonPalette1Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (29.07,29.07,29.07,255), 16)) \n\n        def bdButtonPalette2Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (82.365,82.365,82.365,255), 16)) \n\n        def bdButtonPalette3Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (151.215,151.215,151.215,255), 16)) \n\n        def bdButtonPalette4Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (232.815,232.815,232.815,255), 16)) \n\n        def bdButtonPalette5Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (255.0,0.0,0.0,255), 16)) \n\n        def bdButtonPalette6Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (255.0,95.625,0.0,255), 16)) \n\n        def bdButtonPalette7Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (255.0,191.25,0.0,255), 16)) \n\n        def bdButtonPalette8Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (223.125,255.0,0.0,255), 16)) \n\n        def bdButtonPalette9Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (127.5,255.0,0.0,255), 16)) \n\n        def bdButtonPalette10Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (31.875,255.0,0.0,255), 16)) \n\n        def bdButtonPalette11Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,255.0,63.75,255), 16)) \n\n        def bdButtonPalette12Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,255.0,159.375,255), 16)) \n\n        def bdButtonPalette13Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,255.0,255.0,255), 16)) \n\n        def bdButtonPalette14Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,159.375,255.0,255), 16)) \n\n        def bdButtonPalette15Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,63.75,255.0,255), 16)) \n\n        def bdButtonPalette16Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (31.875,0.0,255.0,255), 16)) \n\n        def bdButtonPalette17Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (127.5,0.0,255.0,255), 16)) \n\n        def bdButtonPalette18Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (223.125,0.0,255.0,255), 16)) \n\n        def bdButtonPalette19Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (255.0,0.0,191.25,255), 16)) \n\n        def bdButton0Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('CG / FX')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (31.875,0.0,0.0,255), 16)) \n\n        def bdButton1Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('3D')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (63.75,9.5625,9.5625,255), 16)) \n\n        def bdButton2Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Key / Roto')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (8.5903125,44.625,6.69375,255), 16)) \n\n        def bdButton3Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Color')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (28.6875,42.7125,63.75,255), 16)) \n\n        def bdButton4Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Transform')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (57.375,31.875,63.75,255), 16)) \n\n        def bdButton5Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Time')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (45.9,40.1625,22.95,255), 16)) \n\n        def bdButton6Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Paint')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (0.0,44.625,44.625,255), 16)) \n\n        def bdButton7Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Note')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (31.875,31.875,31.875,255), 16)) \n\n        def bdButton8Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Read')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (76.5,0.0,29.835,255), 16)) \n\n        def bdButton9Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Write')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (38.25,25.245,5.7375,255), 16)) \n\n        def bdButton10Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('Important')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (216.75,64.7540625,37.93125,255), 16)) \n\n        def bdButton11Clicked(self):\n            if ((self.node.knob('label').getValue()=='') or (self.node.knob('label').getValue() in bdLabelList)):\n                self.node.knob('label').setValue('')\n            self.node.knob('tile_color').setValue(int('%02x%02x%02x%02x' % (random.randrange(35,128),random.randrange(35,128),random.randrange(35,128),255), 16))\n            \n        def bdButtonCustom1Clicked(self):\n            self.node.knob('z_order').setValue(self.node.knob('z_order').getValue()+1)\n            \n        def bdButtonCustom2Clicked(self):\n            self.node.knob('z_order').setValue(self.node.knob('z_order').getValue()-1)\n\n        def bdButtonCustom3Clicked(self):\n            self.node.knob('note_font_size').setValue(self.node.knob('note_font_size').getValue()+5)\n\n        def bdButtonCustom4Clicked(self):\n            self.node.knob('note_font_size').setValue(self.node.knob('note_font_size').getValue()-5)\n            \n        def bdButtonCustom5Clicked(self):\n            nuke.tcl(\"start https://mammal.atlassian.net/wiki/spaces/MC/pages/55967759/mmlBackdrop\")\n            \n        def makeUI(self):\n            return self\n\n        def updateValue(self):\n            pass\n        \n        mmlBdDeclared = True")

    #print "I am finished CREATING knobs for {0}.".format(n.name())
    #print "I am ADDING knobs for {0}.".format(n.name())


    ###--- Bradley.W Foundry Test Tab Addition ------------------------------------###
    testTab = nuke.Tab_Knob('testTab', 'testTab')
    n.addKnob(testTab)
    ###----------------------------------------------------------------------------###

    n.addKnob(bdUserSettings)
    n.addKnob(bdLabel)
    n.addKnob(bdSettingsBegin)
    n.addKnob(bdWidget)
    n.addKnob(bdExecute)
    n.addKnob(bdUI)


    #bdWidget.setFlag( 0x00001000)
    bdWidget.setFlag(nuke.STARTLINE)
    #bdUI.setFlag(0x00040000)
    bdUI.setFlag(nuke.INVISIBLE)
    n.addKnob(bdDiv1)
    bdFontSize.setFlag(nuke.STARTLINE)
    n.addKnob(bdFontSize)
    bdFontSize.setFlag(nuke.STARTLINE)
    n.addKnob(bdSettingsEnd)

    #print "I am finished ADDING knobs for {0}.".format(n.name())

    #revert to previous selection
    n['selected'].setValue(True)
    for node in selNodes:
        node['selected'].setValue(True)

    n['selected'].setValue(False)
    #Show the properties panel for the new Backdrop
    n.knob('runMe').execute()
    n.showControlPanel()

    ###--- Bradley.W Foundry Test Tab Delayed Removal -----------------------------###
    QtCore.QTimer.singleShot(10, lambda: n.hideControlPanel())
    n.removeKnob(testTab)
    QtCore.QTimer.singleShot(40, lambda: n.showControlPanel())
    ###----------------------------------------------------------------------------###
    
    mmlBdDeclared = True

    return n

if __name__ == "__main__":
    main()
